name: Build Documentation

on:
  # Only trigger on PRs and manual dispatch
  # Production and development builds handle their own documentation
  pull_request:
    branches: [ master, develop ]
    paths:
      - 'docs/**'
      - 'carla_simulator/**'
      - 'web/**'
      - '*.py'
      - 'pyproject.toml'
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.11"
  NODE_VERSION: "18"

jobs:
  build-documentation:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[docs]"
          pip install sphinx sphinx-autodoc-typehints

      - name: Install Mermaid CLI
        run: npm install -g @mermaid-js/mermaid-cli

      - name: Run documentation automation
        run: |
          # Run the comprehensive documentation automation script
          # This handles: mmd generation, image conversion, API docs, and HTML build
          python docs/auto_generate_docs.py

      - name: Upload built docs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: html-docs
          path: docs/_build/html/

      - name: Upload documentation source
        uses: actions/upload-artifact@v4
        with:
          name: docs-source
          path: |
            docs/
            mmd/
            .readthedocs.yaml

      - name: Generate documentation summary
        run: |
          echo "## Documentation Build Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -d "docs/_build/html" ]; then
            echo "✅ **Documentation Build**: SUCCESS" >> $GITHUB_STEP_SUMMARY
            echo "📚 **Generated Files**: HTML documentation" >> $GITHUB_STEP_SUMMARY
            echo "📁 **Location**: `docs/_build/html/`" >> $GITHUB_STEP_SUMMARY
            
            # Count generated files
            file_count=$(find docs/_build/html -type f -name "*.html" | wc -l)
            echo "📄 **HTML Pages**: $file_count files" >> $GITHUB_STEP_SUMMARY
            
            # List main pages
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Main Pages**:">> $GITHUB_STEP_SUMMARY
            if [ -f "docs/_build/html/index.html" ]; then
              echo "- 📖 [Index](docs/_build/html/index.html)" >> $GITHUB_STEP_SUMMARY
            fi
            if [ -f "docs/_build/html/api.html" ]; then
              echo "- 🔧 [API Reference](docs/_build/html/api.html)" >> $GITHUB_STEP_SUMMARY
            fi
            if [ -f "docs/_build/html/getting_started.html" ]; then
              echo "- 🚀 [Getting Started](docs/_build/html/getting_started.html)" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "❌ **Documentation Build**: FAILED" >> $GITHUB_STEP_SUMMARY
            echo "🔧 Please check the build logs for errors." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📦 **Artifacts**: Available for download" >> $GITHUB_STEP_SUMMARY
          echo "🌐 **ReadTheDocs**: Auto-deployed from master branch" >> $GITHUB_STEP_SUMMARY

  # Optional: Deploy to GitHub Pages (if enabled)
  deploy-to-pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [build-documentation]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Download documentation artifacts
        uses: actions/download-artifact@v4
        with:
          name: html-docs
          path: docs-html

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs-html

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
