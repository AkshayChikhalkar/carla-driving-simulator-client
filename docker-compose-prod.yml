services:
  carla-driving-simulator-client:
    image: akshaychikhalkar/carla-simulator-client:dev_v1.2
    container_name: carla-client
    shm_size: "2g"
    runtime: nvidia
    ulimits:
      stack: 67108864  #
    pull_policy: always
    ports:
      - "3000:3000"  # Frontend only - backend communicates internally
    environment:
      - PYTHONPATH=/app
      - HOST=0.0.0.0
      - REACT_APP_API_URL=http://localhost:8000
      - WDS_SOCKET_HOST=0.0.0.0
      - WDS_SOCKET_PORT=3000
      - DATABASE_URL=postgresql://postgres:postgres@193.16.126.186:5432/carla_simulator
      - CARLA_HOST=carla-server  # Connect to CARLA server container
      - CARLA_PORT=2000
      - NVIDIA_VISIBLE_DEVICES=all
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 40s
    volumes:
      - ./logs:/app/logs
      - ./reports:/app/reports
      - ./config:/app/config
    depends_on:
      carla-server:
        condition: service_healthy
    networks:
      - carla-network



  carla-server:
    image: carlasim/carla:0.10.0
    container_name: carla-server
    privileged: true
    runtime: nvidia
    ports:
      - "2000-2002:2000-2002"
    shm_size: "32g"
    ipc: host
    ulimits:
      memlock:
        soft: -1
        hard: -1
      stack:
        soft: 67108864
        hard: 67108864
    env_file:
      - .env
    volumes:
      - ./carla-server-scripts/start.sh:/start.sh:ro
    command: bash /start.sh
    environment:
      - NVIDIA_VISIBLE_DEVICES=2
    healthcheck:
      test: ["CMD", "pgrep", "-f", "CarlaUnreal"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - carla-network

networks:
  carla-network:
    driver: bridge



    #Test for CICD