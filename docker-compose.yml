version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile.dev
      args:
        VERSION: ${VERSION:-latest}
        BUILD_TIME: ${BUILD_TIME:-2024-01-01T00:00:00Z}
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - HOST=0.0.0.0
      - CARLA_HOST=carla-server
      - CARLA_PORT=2000
      - WEB_HOST=0.0.0.0
      - WEB_PORT=8000
      - LOG_LEVEL=INFO
      - DEBUG=true
      - TESTING=false
      - CONTAINER_ENV=true
      - WEB_MODE=true
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
      - ./reports:/app/reports
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - postgres

  # Frontend service
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile.dev
      args:
        VERSION: ${VERSION:-latest}
        BUILD_TIME: ${BUILD_TIME:-2024-01-01T00:00:00Z}
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - WDS_SOCKET_HOST=0.0.0.0
      - WDS_SOCKET_PORT=3000
      - FRONTEND_PORT=3000
    volumes:
      - ./web/frontend/src:/app/src
      - ./web/frontend/public:/app/public
    depends_on:
      - backend

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: carla_simulator
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: